<strong>Command: Check Input</strong>
<em>Purpose:</em> Verify input lattice types and parameters
<em>Output type:</em> Valid input is reported as unit cell a, b, c, &alpha;, &beta;, &gamma;. 
Warnings are output for invalid inputs.
<em>Parameters:</em> NA

--------------------------------------------------
<strong>Command: Generate cells of a particular type or types</strong>
<em>Purpose:</em> To Create valid unit cells of various user-chose types
<em>Output type:</em> Output cells are reported in G<sup>6</sup> form. Randomly 
chosen cell parameters for the various selected types.
lattice type is shown following the numerical parameters.
<em>Parameters:</em> (default values in parentheses)
-- The number of cells of each type to be generated (1)
-- The type(s) of selected output required. Examples are
---- "all" (default) -- produces examples of each of the 44 Niggli types 
(see the International Tables) and
each of the 24 Delone types [HJB can we display the Delone chart?] (all)
---- a number between 1 and 44 will generate examples of that Niggli type. For instance,
24 will create Niggli type 24 (which is hR). {1..44}
---- "m" generates monoclinic examples {c, t, h, o, m, a}
---- "mC" generates C-centered monoclinic examples {mP, mS, mC, hR, hP, tP, tI, cF, cI, cP, aP}
---- "A1" generates a general triclinic Delone type with no S<sup>6</sup> zeros.
---- "O4" generates one of the centered orthorhombic Delone type with signature {00r sst}.
---- "O" will generate all orthombic Delone types {C, T, H, O, M, A}
---- Unrecognized input will generate all types

--------------------------------------------------
<strong>Command: compute Niggli-reduced primitive cells</strong>
<em>Purpose:</em> Perform Niggli reduction on input cells. The result has
the shortest edge lengths of the lattice, and is the "most orthogonal" unit cell.
<em>Output type:</em> G<sup>6</sup> form of the reduced cells of input
<em>Parameters:</em> NA

--------------------------------------------------
<strong>Command: compute Selling-reduced primitive cells</strong>
<em>Purpose:</em> Perform Selling/Delone reduction on input cells
<em>Output type:</em> S<sup>6</sup> form of the reduced cells of input. The Delone-reduced
cell has only non-acute interaxial angles.
<em>Parameters:</em> NA

--------------------------------------------------
<strong>Command: compute NCDist and CS6Dist distances</strong>
<em>Purpose:</em> For a group of input cells, distances are reported in 3 different calculations:
the simple Euclidean distance, the NCDist (G<sup>6</sup>) distance, and the CS6Dist
(S<sup>6</sup>) distances. Distances are calculated in 2 different ways. The first
is the rolling calculation of pairs in the list. The second is the distance of each 
cell from the first input cell.
<em>Output type:</em> The distances for each input is output on a single line, starting with a 
semicolon so that it will be ignored by succeeding programs. The input cells are echoed
to the output line as primitive and a, b, c &alpha;, &beta;, &gamma;, so that they 
can be used for further input. Each output cell is followed
by its ordinal number, and the distance calculations list the ordinals for the
cells used of each calculation.
<em>Parameters:</em> NA

--------------------------------------------------
<strong>Command: apply Lattice Matching algorithm to listed cells</strong>
<em>Purpose:</em> Taking the first input cells as the "REFERENCE", the alternative cells of
each succeeding cell are examined to find a closest match to the reference. 
Andrews, Lawrence C., Herbert J. Bernstein, and Nicholas K. Sauter. 
"Approximating lattice similarity." 
Acta Crystallographica Section A: Foundations and Advances 79.5, 480-484 (2023).

<em>Output type:</em> a, b, c &alpha;, &beta;, &gamma;, with the lattice centering
chosen to be the same as that of the reference cell.
<em>Example:</em>
f 10 10 10  90 90 90
p 7 7.1 6.9 59 60 61
end
; Lattice Matching
F     10.000    10.000    10.000    90.000    90.000    90.000 ( 0  degrees in S6)   REFERENCE
F     10.050     9.821     9.832    89.143    92.094    88.781 ( 3.07179  degrees in S6)
end
  
  
<em>Parameters:</em> NA

--------------------------------------------------
<strong>Command: compute path between pairs of cells</strong>
<em>Purpose:</em> A series of points is computed between each pair of input cells. The
computation is done in S<sup>6</sup>. For n input cells, n-1 paths will be
generated. The individual points are labeled with their ordinals, and each 
segment is labeled (after the 6 parameters).
<em>Output type:</em> S<sup>6</sup>
<em>Parameters:</em> The number of points in -each- path.(20)

--------------------------------------------------
<strong>Command: compute perturbed versions of input cells</strong>
<em>Purpose:</em> For each input cell, compute slight altered versions
<em>Output type:</em> unit cell edge lengths and angles
<em>Parameters:</em> The number of perturbations of each input cell (20) and the amount of
perturbation in parts-per-thousand (ppt) (1 ppt). The calculation is done S<sup>6</sup>,
and the perturbation is in a direction orthogonal to the S<sup>6</sup> vector..
<em>Example:</em> requesting 10 perturbations and 10 ppt (1%) perturbations.
f 10 10 10  90 90 90
end
; Perturb vectors

F 10	10	10	90	90	90	    original inputCell
F     9.940     9.916     9.884    89.573    89.357    89.565   perturbed  
F    10.016    10.029     9.960    89.567    90.358    90.109   perturbed  
F     9.956     9.921     9.929    89.938    89.497    89.452   perturbed  
F     9.896     9.992    10.053    90.576    89.709    89.376   perturbed  
F     9.969     9.989     9.984    90.509    89.490    89.668   perturbed  
F     9.963     9.984     9.904    89.655    89.147    90.336   perturbed  
F    10.015     9.928     9.962    89.793    90.276    89.394   perturbed  
F    10.019     9.922     9.884    89.295    89.772    89.926   perturbed  
F     9.914     9.918     9.909    89.327    89.348    89.820   perturbed  
F    10.020     9.978    10.119    90.295    90.410    89.960   perturbed

; CmdPerturb: number of cells to produce =  10  orthogonal perturbation of  10 /1000

end

--------------------------------------------------
<strong>Command: apply S6 reflections to input cells</strong>
<em>Purpose:</em> The 24 permutations of the S<sup>6</sup> cell vectors: a, b, , and d, where d=-a-b-c.
Duplicates are removed.
<em>Output type:</em> S<sup>6</sup>
<em>Parameters:</em> NA
<em>Example:</em>
C:\Users\lca\Source\Repos\duck10\LatticeRepLib\x64\Debug>cmds6refl
f 10 10 10  90 90 90
end
; S6 reflections
S6   0.00000   0.00000   0.00000 -100.00000 -100.00000 -100.00000   0
S6   0.00000 -100.00000 -100.00000 -100.00000   0.00000   0.00000   1
S6 -100.00000   0.00000 -100.00000   0.00000 -100.00000   0.00000   2
S6 -100.00000 -100.00000   0.00000   0.00000   0.00000 -100.00000   3

or presenting those as unit cells:
P    10.000    10.000    10.000    90.000    90.000    90.000 
P    17.321    10.000    10.000    90.000   125.264   125.264 
P    10.000    17.321    10.000   125.264    90.000   125.264 
P    10.000    10.000    17.321   125.264   125.264    90.000 

The values of 17.321 are from the Delone "d" vector, d=-(a+b+c)

But Niggli reduction of those 4 cells gives:
G6   100.000   100.000   100.000     0.000     0.000     0.000 
G6   100.000   100.000   100.000     0.000     0.000     0.000 
G6   100.000   100.000   100.000     0.000     0.000     0.000 
G6   100.000   100.000   100.000     0.000     0.000     0.000 

--------------------------------------------------
<strong>Command: apply Sella algorithm</strong>
<em>Purpose:</em> Determine potentially higher symmetry for input cells
<em>Output type:</em> agreement factors for each of the Bravais lattice types, and reduced cell
information for the input cells.
<em>Graphical output:</em> the figure of the hierarchy of Bravais lattice types 
with numerical agreement determined by Sella.
(Grimmer, H., & Nespolo, M. (2006). 
Geminography: the crystallography of twins. Zeitschrift für Kristallographie-Crystalline Materials, 221(1), 28-50.)

<em>Parameters:</em> choices if only some outputs are needed (all)

--------------------------------------------------
<strong>Command: compute Bravais tetrahedron (B4)</strong>
<em>Purpose:</em> computes the edge vectors of the unit cell and their negative sum. These 4
vectors also define the Bravais tetrahedron Delone, B. N., Galiulin, R. V., 
& Shtogrin, M. I. (1975). On the Bravais types of 
lattices. Journal of Soviet Mathematics, 4(1), 79-156.
<em>Output type:</em> echoes the input cell as a, b, c, &alpha;, &beta;, &gamma;, 
followed by the vector representations of the unit cell edges,
and then a listing of their lengths.
<em>Parameters:</em> NA

--------------------------------------------------
<strong>Command: compute complex cell presentation (C<sup>3</sup>)</strong>
<em>Purpose:</em> presents input cells as C<sup>3</sup>
<em>Output type:</em> the C<sup>3</sup> version of the input. Note: at this time,
these cannot be used as input to other programs.
<em>Parameters:</em> NA
<em>Example:</em>
g 100 110 120 0 1 2
end
; To C3
C3 (0.000,-101.500) (0.500,-111.000) (1.000,-120.500) 
; 
end

--------------------------------------------------
<strong>Command: compute side-angle cells (a, b, c, &alpha;, &beta;, &gamma;)</strong>
<em>Purpose:</em> converts input cell representations to cell parameters
<em>Output type:</em> a, b, c, &alpha, &beta;, &gamma;. If the input cell is not in 
cell parameters already, then primitive is assumed.
<em>Parameters:</em> NA

--------------------------------------------------
<strong>Command: compute G<sup>6</sup> version of cells</strong>
<em>Purpose:</em> convert to G<sup>6</sup> representation
<em>Output type:</em> G<sup>6</sup>
<em>Parameters:</em> NA

--------------------------------------------------
<strong>Command: compute S<sup>6</sup> version of cells</strong>
<em>Purpose:</em> convert to S<sup>6</sup> representation
<em>Output type:</em> S<sup>6</sup>
<em>Parameters:</em> NA

--------------------------------------------------
<strong>Command: compute unsorted Dirichlet cells (dc7unsrt)</strong>
<em>Purpose:</em> convert to the 7 parameter form related to the Dirichlet (also Vornoi or Wigner-Seitz) unit cell.
<em>Output type:</em> DC7u
<em>Parameters:</em> NA

--------------------------------------------------
<strong>compute V7 version of cells</strong>
<em>Purpose:</em> convert to the 7 parameter vector of Andrews, Bernstein, Pelletier, 1980.
The vector is define in terms of the Niggli reduced cell a,b,c and the Niggli reduced
reciprocal cell 1/a*, 1/b*, 1/c*, and the cube root of the reduced cell volume.
<em>Output type:</em> V<sup>7</sup>
<em>Parameters:</em> NA

--------------------------------------------------
<strong>Command: compute volumes of listed cells</strong>
<em>Purpose:</em> compute volumes of listed cells
<em>Output type:</em> Lattice centering, then cell parameters (a, b, c, &alpha;, &beta;, &gamma;), 
followed by the volume
<em>Parameters:</em> NA

--------------------------------------------------
<strong>Command: compute linearized S<sup>6</sup> or Root Invariant version of cells</strong>
<em>Purpose:</em> Both of the output choices are 6-space vectors of positive numbers.
The values are derived by first applying Selling/Delone reduction so that all of 
the S<sup>6</sup> values are non-positive. Then the square roots of the negative 
of those values are used to create the result (linearized S<sup>6</sup>). The
root invariant is generated by applying sorting rules of Bright, Cooper, and Kurlin.
Bright, M., Cooper, A. I., & Kurlin, V. (2021). 
Welcome to a continuous world of 3-dimensional lattices. 
arXiv preprint arxiv:2109.11538, 2.
<em>Output type:</em> The type followed by the 7 parameters.
<em>Parameters:</em> blank for output both types, "R" for root invariant, 
and S for linearized S<sup>6</sup>

--------------------------------------------------

<strong>Command: </strong> [PlotC3]
<em>Purpose:</em> Graphical output of multiple unit cells in C<sup>3</sup>
<em>Output type:</em> Name of the file containing the plots
<em>Graphical output:</em> 2-D plots of the 3 complex coordinates i C<sup>3</sup>
<em>Parameters:</em> NA
--------------------------------------------------
